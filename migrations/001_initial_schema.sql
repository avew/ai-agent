-- Migration: 001_initial_schema.sql
-- Create initial database schema for chat-agent project
-- Requires PostgreSQL with pgvector extension

-- Enable pgvector extension for vector operations
CREATE EXTENSION IF NOT EXISTS vector;

-- Create documents table for storing uploaded files and their embeddings
CREATE TABLE IF NOT EXISTS documents (
    id SERIAL PRIMARY KEY,
    filename VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    embedding vector(1536), -- OpenAI text-embedding-3-small produces 1536-dimensional vectors
    filepath VARCHAR(500) NOT NULL,
    checksum VARCHAR(64) NOT NULL UNIQUE, -- SHA-256 hash
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_documents_filename ON documents(filename);
CREATE INDEX IF NOT EXISTS idx_documents_checksum ON documents(checksum);
CREATE INDEX IF NOT EXISTS idx_documents_created_at ON documents(created_at);

-- Create index for vector similarity search using cosine distance
CREATE INDEX IF NOT EXISTS idx_documents_embedding_cosine ON documents 
USING ivfflat (embedding vector_cosine_ops) WITH (lists = 100);

-- Create trigger to automatically update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_documents_updated_at 
    BEFORE UPDATE ON documents 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- Insert a comment about the schema
COMMENT ON TABLE documents IS 'Stores uploaded documents with their text content and vector embeddings for RAG search';
COMMENT ON COLUMN documents.embedding IS 'Vector embedding generated by OpenAI text-embedding-3-small model (1536 dimensions)';
COMMENT ON COLUMN documents.checksum IS 'SHA-256 checksum for duplicate detection';
